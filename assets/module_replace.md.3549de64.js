import{_ as t,c as e,o as d,O as o}from"./chunks/framework.e51d172d.js";const _=JSON.parse('{"title":"replace 模块","description":"","frontmatter":{},"headers":[],"relativePath":"module/replace.md","lastUpdated":1681985498000}'),a={name:"module/replace.md"},c=o('<h1 id="replace-模块" tabindex="-1">replace 模块 <a class="header-anchor" href="#replace-模块" aria-label="Permalink to &quot;replace 模块&quot;">​</a></h1><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/replace_module.html" target="_blank" rel="noreferrer">replace 模块</a> 有点类似于 Linux 的 <code>sed</code> 命令，主要也是基于正则进行匹配和替换。</p><h2 id="常用参数" tabindex="-1">常用参数 <a class="header-anchor" href="#常用参数" aria-label="Permalink to &quot;常用参数&quot;">​</a></h2><table><thead><tr><th>参数名</th><th>是否必须</th><th>参数类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>path</code></td><td>是</td><td><code>string</code></td><td></td><td>指定要修改的文件</td></tr><tr><td><code>regexp</code></td><td>是</td><td><code>string</code></td><td></td><td>指定一个正则表达式，可以是 python 正则</td></tr><tr><td><code>replace</code></td><td>否</td><td><code>string</code></td><td></td><td>替换 <code>regexp</code> 参数匹配到的字符串</td></tr><tr><td><code>owner</code></td><td>否</td><td><code>string</code></td><td></td><td>修改文件或目录的所属用户，相当于 <code>chown</code> 命令修改</td></tr><tr><td><code>group</code></td><td>否</td><td><code>string</code></td><td></td><td>修改文件或目录的所属组名，相当于 <code>chown</code> 命令修改</td></tr><tr><td><code>mode</code></td><td>否</td><td><code>any</code></td><td></td><td>修改文件或目录的权限，与chmod命令不一致的是，replace模块的mode参数需要添加前导零</td></tr><tr><td><code>others</code></td><td>否</td><td><code>string</code></td><td></td><td>指定 <code>file</code> 模块的所有参数</td></tr><tr><td><code>encoding</code></td><td>否</td><td><code>string</code></td><td></td><td>用于读取和写入文件的字符编码</td></tr><tr><td><code>before</code></td><td>否</td><td><code>string</code></td><td></td><td>如果指定，则仅替换/删除此匹配之前的内容，可以和after参数结合使用</td></tr><tr><td><code>after</code></td><td>否</td><td><code>string</code></td><td></td><td>如果指定，则仅替换/删除此匹配之后的内容，可以和before参数结合使用</td></tr><tr><td><code>attributes</code></td><td>否</td><td><code>string</code></td><td></td><td>指定文件或目录的特殊属性，相当 <code>chattr</code>，默认使用=运算符，指定文件或目录的某项属性</td></tr><tr><td><code>backup</code></td><td>否</td><td><code>boolean</code></td><td><code>false</code></td><td>修改源文件前创建一个包含时间戳信息的备份文件</td></tr></tbody></table><p>更多参数可以使用命令 <code>ansible-doc -s replace</code> 获取更多使用相关的文档或者<a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/replace_module.html#parameters" target="_blank" rel="noreferrer">查看官方文档</a>。</p><h2 id="一些示例" tabindex="-1">一些示例 <a class="header-anchor" href="#一些示例" aria-label="Permalink to &quot;一些示例&quot;">​</a></h2><h3 id="用新主机名替换旧主机名" tabindex="-1">用新主机名替换旧主机名 <a class="header-anchor" href="#用新主机名替换旧主机名" aria-label="Permalink to &quot;用新主机名替换旧主机名&quot;">​</a></h3><p>替换 <code>/etc/hosts</code> 文件中的 <code>old.host.name</code> 为 <code>new.host.name</code>。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ansible</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/inventory.yml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">replace</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path=/etc/hosts regexp=&#39;(\\s+)old\\.host\\.name(\\s+.*)?$&#39; replace=&#39;\\1new.host.name\\2&#39;</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div>',9),r=[c];function s(l,n,p,i,h,b){return d(),e("div",null,r)}const u=t(a,[["render",s]]);export{_ as __pageData,u as default};
